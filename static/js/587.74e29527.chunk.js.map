{"version":3,"file":"static/js/587.74e29527.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/render/utils/lifecycles.mjs","../node_modules/framer-motion/dist/es/render/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/render/html/visual-element.mjs","../node_modules/framer-motion/dist/es/render/svg/visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs"],"sourcesContent":["function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    var prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (var i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { __spreadArray, __read, __assign, __rest } from 'tslib';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { AnimationType } from './types.mjs';\nimport { isVariantLabels, resolveVariant, isVariantLabel } from './variants.mjs';\n\nvar variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nvar reversePriorityOrder = __spreadArray([], __read(variantPriorityOrder), false).reverse();\nvar numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return function (animations) {\n        return Promise.all(animations.map(function (_a) {\n            var animation = _a.animation, options = _a.options;\n            return animateVisualElement(visualElement, animation, options);\n        }));\n    };\n}\nfunction createAnimationState(visualElement) {\n    var animate = animateList(visualElement);\n    var state = createState();\n    var allAnimatedKeys = {};\n    var isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    var buildResolvedTypeValues = function (acc, definition) {\n        var resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            resolved.transition; var transitionEnd = resolved.transitionEnd, target = __rest(resolved, [\"transition\", \"transitionEnd\"]);\n            acc = __assign(__assign(__assign({}, acc), target), transitionEnd);\n        }\n        return acc;\n    };\n    function isAnimated(key) {\n        return allAnimatedKeys[key] !== undefined;\n    }\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        var props = visualElement.getProps();\n        var context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        var animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        var removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        var encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        var removedVariantIndex = Infinity;\n        var _loop_1 = function (i) {\n            var type = reversePriorityOrder[i];\n            var typeState = state[type];\n            var prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            var propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            var activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = __assign({}, encounteredKeys);\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                return \"continue\";\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            var shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            var definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            var resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b;\n            var allKeys = __assign(__assign({}, prevResolvedValues), resolvedValues);\n            var markToAnimate = function (key) {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (var key in allKeys) {\n                var next = resolvedValues[key];\n                var prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = __assign(__assign({}, encounteredKeys), resolvedValues);\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push.apply(animations, __spreadArray([], __read(definitionList.map(function (animation) { return ({\n                    animation: animation,\n                    options: __assign({ type: type }, options),\n                }); })), false));\n            }\n        };\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (var i = 0; i < numAnimationTypes; i++) {\n            _loop_1(i);\n        }\n        allAnimatedKeys = __assign({}, encounteredKeys);\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            var fallbackAnimation_1 = {};\n            removedKeys.forEach(function (key) {\n                var fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation_1[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation_1 });\n        }\n        var shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(function (child) { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        var animations = animateChanges(options, type);\n        for (var key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        isAnimated: isAnimated,\n        animateChanges: animateChanges,\n        setActive: setActive,\n        setAnimateFunction: setAnimateFunction,\n        getState: function () { return state; },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (isVariantLabels(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive) {\n    if (isActive === void 0) { isActive = false; }\n    return {\n        isActive: isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    var _a;\n    return _a = {},\n        _a[AnimationType.Animate] = createTypeState(true),\n        _a[AnimationType.InView] = createTypeState(),\n        _a[AnimationType.Hover] = createTypeState(),\n        _a[AnimationType.Tap] = createTypeState(),\n        _a[AnimationType.Drag] = createTypeState(),\n        _a[AnimationType.Focus] = createTypeState(),\n        _a[AnimationType.Exit] = createTypeState(),\n        _a;\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","var makeRenderlessComponent = function (hook) { return function (props) {\n    hook(props);\n    return null;\n}; };\n\nexport { makeRenderlessComponent };\n","import { __read } from 'tslib';\nimport { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nvar animations = {\n    animation: makeRenderlessComponent(function (_a) {\n        var visualElement = _a.visualElement, animate = _a.animate;\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(function () { return animate.subscribe(visualElement); }, [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent(function (props) {\n        var custom = props.custom, visualElement = props.visualElement;\n        var _a = __read(usePresence(), 2), isPresent = _a[0], safeToRemove = _a[1];\n        var presenceContext = useContext(PresenceContext);\n        useEffect(function () {\n            var _a, _b;\n            visualElement.isPresent = isPresent;\n            var animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { useContext, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useId } from '../../utils/use-id.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    var context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    var id = useId();\n    useEffect(function () { return register(id); }, []);\n    var safeToRemove = function () { return onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete(id); };\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options) {\n    if (options === void 0) { options = { passive: true }; }\n    target.addEventListener(eventName, handler, options);\n    return function () { return target.removeEventListener(eventName, handler); };\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(function () {\n        var element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    var hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return function (event) {\n        var isMouseEvent = event instanceof MouseEvent;\n        var isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\n    var point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType) {\n    if (pointType === void 0) { pointType = \"page\"; }\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\n    var listener = function (event) {\n        return handler(event, extractEventInfo(event));\n    };\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nvar mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nvar touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nvar supportsPointerEvents = function () {\n    return isBrowser && window.onpointerdown === null;\n};\nvar supportsTouchEvents = function () {\n    return isBrowser && window.ontouchstart === null;\n};\nvar supportsMouseEvents = function () {\n    return isBrowser && window.onmousedown === null;\n};\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    var lock = null;\n    return function () {\n        var openLock = function () {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    var lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        var openHorizontal_1 = globalHorizontalLock();\n        var openVertical_1 = globalVerticalLock();\n        if (openHorizontal_1 && openVertical_1) {\n            lock = function () {\n                openHorizontal_1();\n                openVertical_1();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal_1)\n                openHorizontal_1();\n            if (openVertical_1)\n                openVertical_1();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return function (event, info) {\n        var _a;\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Hover, isActive);\n        callback === null || callback === void 0 ? void 0 : callback(event, info);\n    };\n}\nfunction useHoverGesture(_a) {\n    var onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, whileHover = _a.whileHover, visualElement = _a.visualElement;\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nvar isNodeOrChild = function (parent, child) {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","var warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","import { __rest, __assign } from 'tslib';\n\n/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nvar observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nvar observers = new WeakMap();\nvar fireObserverCallback = function (entry) {\n    var _a;\n    (_a = observerCallbacks.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n};\nvar fireAllObserverCallbacks = function (entries) {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver(_a) {\n    var root = _a.root, options = __rest(_a, [\"root\"]);\n    var lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    var rootObservers = observers.get(lookupRoot);\n    var key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, __assign({ root: root }, options));\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    var rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return function () {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport(_a) {\n    var visualElement = _a.visualElement, whileInView = _a.whileInView, onViewportEnter = _a.onViewportEnter, onViewportLeave = _a.onViewportLeave, _b = _a.viewport, viewport = _b === void 0 ? {} : _b;\n    var state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    var shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    var useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nvar thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var root = _a.root, rootMargin = _a.margin, _b = _a.amount, amount = _b === void 0 ? \"some\" : _b, once = _a.once;\n    useEffect(function () {\n        if (!shouldObserve)\n            return;\n        var options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin: rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        var intersectionCallback = function (entry) {\n            var _a;\n            var isIntersecting = entry.isIntersecting;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, isIntersecting);\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            var props = visualElement.getProps();\n            var callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback === null || callback === void 0 ? void 0 : callback(entry);\n        };\n        return observeIntersection(visualElement.getInstance(), options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, _a) {\n    var _b = _a.fallback, fallback = _b === void 0 ? true : _b;\n    useEffect(function () {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(function () {\n            var _a;\n            state.hasEnteredView = true;\n            var onViewportEnter = visualElement.getProps().onViewportEnter;\n            onViewportEnter === null || onViewportEnter === void 0 ? void 0 : onViewportEnter(null);\n            (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.InView, true);\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nvar gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture(_a) {\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, visualElement = _a.visualElement;\n    var hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    var isPressing = useRef(false);\n    var cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    var eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture(_a) {\n    var whileFocus = _a.whileFocus, visualElement = _a.visualElement;\n    var onFocus = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, true);\n    };\n    var onBlur = function () {\n        var _a;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { __spreadArray, __read } from 'tslib';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\n\nvar names = [\n    \"LayoutMeasure\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutUpdate\",\n    \"ViewportBoxUpdate\",\n    \"Update\",\n    \"Render\",\n    \"AnimationComplete\",\n    \"LayoutAnimationComplete\",\n    \"AnimationStart\",\n    \"LayoutAnimationStart\",\n    \"SetAxisTarget\",\n    \"Unmount\",\n];\nfunction createLifecycles() {\n    var managers = names.map(function () { return new SubscriptionManager(); });\n    var propSubscriptions = {};\n    var lifecycles = {\n        clearAllListeners: function () { return managers.forEach(function (manager) { return manager.clear(); }); },\n        updatePropListeners: function (props) {\n            names.forEach(function (name) {\n                var _a;\n                var on = \"on\" + name;\n                var propListener = props[on];\n                // Unsubscribe existing subscription\n                (_a = propSubscriptions[name]) === null || _a === void 0 ? void 0 : _a.call(propSubscriptions);\n                // Add new subscription\n                if (propListener) {\n                    propSubscriptions[name] = lifecycles[on](propListener);\n                }\n            });\n        },\n    };\n    managers.forEach(function (manager, i) {\n        lifecycles[\"on\" + names[i]] = function (handler) { return manager.add(handler); };\n        lifecycles[\"notify\" + names[i]] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return manager.notify.apply(manager, __spreadArray([], __read(args), false));\n        };\n    });\n    return lifecycles;\n}\n\nexport { createLifecycles };\n","import { __assign, __spreadArray, __read } from 'tslib';\nimport sync, { cancelSync } from 'framesync';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { createLifecycles } from './utils/lifecycles.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, isVariantLabel } from './utils/variants.mjs';\n\nvar visualElement = function (_a) {\n    var _b = _a.treeType, treeType = _b === void 0 ? \"\" : _b, build = _a.build, getBaseTarget = _a.getBaseTarget, makeTargetAnimatable = _a.makeTargetAnimatable, measureViewportBox = _a.measureViewportBox, renderInstance = _a.render, readValueFromInstance = _a.readValueFromInstance, removeValueFromRenderState = _a.removeValueFromRenderState, sortNodePosition = _a.sortNodePosition, scrapeMotionValuesFromProps = _a.scrapeMotionValuesFromProps;\n    return function (_a, options) {\n        var parent = _a.parent, props = _a.props, presenceId = _a.presenceId, blockInitialAnimation = _a.blockInitialAnimation, visualState = _a.visualState, shouldReduceMotion = _a.shouldReduceMotion;\n        if (options === void 0) { options = {}; }\n        var isMounted = false;\n        var latestValues = visualState.latestValues, renderState = visualState.renderState;\n        /**\n         * The instance of the render-specific node that will be hydrated by the\n         * exposed React ref. So for example, this visual element can host a\n         * HTMLElement, plain object, or Three.js object. The functions provided\n         * in VisualElementConfig allow us to interface with this instance.\n         */\n        var instance;\n        /**\n         * Manages the subscriptions for a visual element's lifecycle, for instance\n         * onRender\n         */\n        var lifecycles = createLifecycles();\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        var values = new Map();\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        var valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        var prevMotionValues = {};\n        /**\n         * When values are removed from all animation props we need to search\n         * for a fallback value to animate to. These values are tracked in baseTarget.\n         */\n        var baseTarget = __assign({}, latestValues);\n        // Internal methods ========================\n        /**\n         * On mount, this will be hydrated with a callback to disconnect\n         * this visual element from its parent on unmount.\n         */\n        var removeFromVariantTree;\n        /**\n         * Render the element with the latest styles outside of the React\n         * render lifecycle\n         */\n        function render() {\n            if (!instance || !isMounted)\n                return;\n            triggerBuild();\n            renderInstance(instance, renderState, props.style, element.projection);\n        }\n        function triggerBuild() {\n            build(element, renderState, latestValues, options, props);\n        }\n        function update() {\n            lifecycles.notifyUpdate(latestValues);\n        }\n        /**\n         *\n         */\n        function bindToMotionValue(key, value) {\n            var removeOnChange = value.onChange(function (latestValue) {\n                latestValues[key] = latestValue;\n                props.onUpdate && sync.update(update, false, true);\n            });\n            var removeOnRenderRequest = value.onRenderRequest(element.scheduleRender);\n            valueSubscriptions.set(key, function () {\n                removeOnChange();\n                removeOnRenderRequest();\n            });\n        }\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        var initialMotionValues = scrapeMotionValuesFromProps(props);\n        for (var key in initialMotionValues) {\n            var value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        var isControllingVariants = checkIfControllingVariants(props);\n        var isVariantNode = checkIfVariantNode(props);\n        var element = __assign(__assign({ treeType: treeType, \n            /**\n             * This is a mirror of the internal instance prop, which keeps\n             * VisualElement type-compatible with React's RefObject.\n             */\n            current: null, \n            /**\n             * The depth of this visual element within the visual element tree.\n             */\n            depth: parent ? parent.depth + 1 : 0, parent: parent, children: new Set(), \n            /**\n             *\n             */\n            presenceId: presenceId, shouldReduceMotion: shouldReduceMotion, \n            /**\n             * If this component is part of the variant tree, it should track\n             * any children that are also part of the tree. This is essentially\n             * a shadow tree to simplify logic around how to stagger over children.\n             */\n            variantChildren: isVariantNode ? new Set() : undefined, \n            /**\n             * Whether this instance is visible. This can be changed imperatively\n             * by the projection tree, is analogous to CSS's visibility in that\n             * hidden elements should take up layout, and needs enacting by the configured\n             * render function.\n             */\n            isVisible: undefined, \n            /**\n             * Normally, if a component is controlled by a parent's variants, it can\n             * rely on that ancestor to trigger animations further down the tree.\n             * However, if a component is created after its parent is mounted, the parent\n             * won't trigger that mount animation so the child needs to.\n             *\n             * TODO: This might be better replaced with a method isParentMounted\n             */\n            manuallyAnimateOnMount: Boolean(parent === null || parent === void 0 ? void 0 : parent.isMounted()), \n            /**\n             * This can be set by AnimatePresence to force components that mount\n             * at the same time as it to mount as if they have initial={false} set.\n             */\n            blockInitialAnimation: blockInitialAnimation, \n            /**\n             * Determine whether this component has mounted yet. This is mostly used\n             * by variant children to determine whether they need to trigger their\n             * own animations on mount.\n             */\n            isMounted: function () { return Boolean(instance); }, mount: function (newInstance) {\n                isMounted = true;\n                instance = element.current = newInstance;\n                if (element.projection) {\n                    element.projection.mount(newInstance);\n                }\n                if (isVariantNode && parent && !isControllingVariants) {\n                    removeFromVariantTree = parent === null || parent === void 0 ? void 0 : parent.addVariantChild(element);\n                }\n                values.forEach(function (value, key) { return bindToMotionValue(key, value); });\n                parent === null || parent === void 0 ? void 0 : parent.children.add(element);\n                element.setProps(props);\n            }, \n            /**\n             *\n             */\n            unmount: function () {\n                var _a;\n                (_a = element.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n                cancelSync.update(update);\n                cancelSync.render(render);\n                valueSubscriptions.forEach(function (remove) { return remove(); });\n                removeFromVariantTree === null || removeFromVariantTree === void 0 ? void 0 : removeFromVariantTree();\n                parent === null || parent === void 0 ? void 0 : parent.children.delete(element);\n                lifecycles.clearAllListeners();\n                instance = undefined;\n                isMounted = false;\n            }, \n            /**\n             * Add a child visual element to our set of children.\n             */\n            addVariantChild: function (child) {\n                var _a;\n                var closestVariantNode = element.getClosestVariantNode();\n                if (closestVariantNode) {\n                    (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n                    return function () {\n                        return closestVariantNode.variantChildren.delete(child);\n                    };\n                }\n            }, sortNodePosition: function (other) {\n                /**\n                 * If these nodes aren't even of the same type we can't compare their depth.\n                 */\n                if (!sortNodePosition || treeType !== other.treeType)\n                    return 0;\n                return sortNodePosition(element.getInstance(), other.getInstance());\n            }, \n            /**\n             * Returns the closest variant node in the tree starting from\n             * this visual element.\n             */\n            getClosestVariantNode: function () {\n                return isVariantNode ? element : parent === null || parent === void 0 ? void 0 : parent.getClosestVariantNode();\n            }, \n            /**\n             * Expose the latest layoutId prop.\n             */\n            getLayoutId: function () { return props.layoutId; }, \n            /**\n             * Returns the current instance.\n             */\n            getInstance: function () { return instance; }, \n            /**\n             * Get/set the latest static values.\n             */\n            getStaticValue: function (key) { return latestValues[key]; }, setStaticValue: function (key, value) { return (latestValues[key] = value); }, \n            /**\n             * Returns the latest motion value state. Currently only used to take\n             * a snapshot of the visual element - perhaps this can return the whole\n             * visual state\n             */\n            getLatestValues: function () { return latestValues; }, \n            /**\n             * Set the visiblity of the visual element. If it's changed, schedule\n             * a render to reflect these changes.\n             */\n            setVisibility: function (visibility) {\n                if (element.isVisible === visibility)\n                    return;\n                element.isVisible = visibility;\n                element.scheduleRender();\n            }, \n            /**\n             * Make a target animatable by Popmotion. For instance, if we're\n             * trying to animate width from 100px to 100vw we need to measure 100vw\n             * in pixels to determine what we really need to animate to. This is also\n             * pluggable to support Framer's custom value types like Color,\n             * and CSS variables.\n             */\n            makeTargetAnimatable: function (target, canMutate) {\n                if (canMutate === void 0) { canMutate = true; }\n                return makeTargetAnimatable(element, target, props, canMutate);\n            }, \n            /**\n             * Measure the current viewport box with or without transforms.\n             * Only measures axis-aligned boxes, rotate and skew must be manually\n             * removed with a re-render to work.\n             */\n            measureViewportBox: function () {\n                return measureViewportBox(instance, props);\n            }, \n            // Motion values ========================\n            /**\n             * Add a motion value and bind it to this visual element.\n             */\n            addValue: function (key, value) {\n                // Remove existing value if it exists\n                if (element.hasValue(key))\n                    element.removeValue(key);\n                values.set(key, value);\n                latestValues[key] = value.get();\n                bindToMotionValue(key, value);\n            }, \n            /**\n             * Remove a motion value and unbind any active subscriptions.\n             */\n            removeValue: function (key) {\n                var _a;\n                values.delete(key);\n                (_a = valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n                valueSubscriptions.delete(key);\n                delete latestValues[key];\n                removeValueFromRenderState(key, renderState);\n            }, \n            /**\n             * Check whether we have a motion value for this key\n             */\n            hasValue: function (key) { return values.has(key); }, \n            /**\n             * Get a motion value for this key. If called with a default\n             * value, we'll create one if none exists.\n             */\n            getValue: function (key, defaultValue) {\n                var value = values.get(key);\n                if (value === undefined && defaultValue !== undefined) {\n                    value = motionValue(defaultValue);\n                    element.addValue(key, value);\n                }\n                return value;\n            }, \n            /**\n             * Iterate over our motion values.\n             */\n            forEachValue: function (callback) { return values.forEach(callback); }, \n            /**\n             * If we're trying to animate to a previously unencountered value,\n             * we need to check for it in our state and as a last resort read it\n             * directly from the instance (which might have performance implications).\n             */\n            readValue: function (key) {\n                var _a;\n                return (_a = latestValues[key]) !== null && _a !== void 0 ? _a : readValueFromInstance(instance, key, options);\n            }, \n            /**\n             * Set the base target to later animate back to. This is currently\n             * only hydrated on creation and when we first read a value.\n             */\n            setBaseTarget: function (key, value) {\n                baseTarget[key] = value;\n            }, \n            /**\n             * Find the base target for a value thats been removed from all animation\n             * props.\n             */\n            getBaseTarget: function (key) {\n                if (getBaseTarget) {\n                    var target = getBaseTarget(props, key);\n                    if (target !== undefined && !isMotionValue(target))\n                        return target;\n                }\n                return baseTarget[key];\n            } }, lifecycles), { \n            /**\n             * Build the renderer state based on the latest visual state.\n             */\n            build: function () {\n                triggerBuild();\n                return renderState;\n            }, \n            /**\n             * Schedule a render on the next animation frame.\n             */\n            scheduleRender: function () {\n                sync.render(render, false, true);\n            }, \n            /**\n             * Synchronously fire render. It's prefered that we batch renders but\n             * in many circumstances, like layout measurement, we need to run this\n             * synchronously. However in those instances other measures should be taken\n             * to batch reads/writes.\n             */\n            syncRender: render, \n            /**\n             * Update the provided props. Ensure any newly-added motion values are\n             * added to our map, old ones removed, and listeners updated.\n             */\n            setProps: function (newProps) {\n                if (newProps.transformTemplate || props.transformTemplate) {\n                    element.scheduleRender();\n                }\n                props = newProps;\n                lifecycles.updatePropListeners(newProps);\n                prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps(props), prevMotionValues);\n            }, getProps: function () { return props; }, \n            // Variants ==============================\n            /**\n             * Returns the variant definition with a given name.\n             */\n            getVariant: function (name) { var _a; return (_a = props.variants) === null || _a === void 0 ? void 0 : _a[name]; }, \n            /**\n             * Returns the defined default transition on this component.\n             */\n            getDefaultTransition: function () { return props.transition; }, getTransformPagePoint: function () {\n                return props.transformPagePoint;\n            }, \n            /**\n             * Used by child variant nodes to get the closest ancestor variant props.\n             */\n            getVariantContext: function (startAtParent) {\n                if (startAtParent === void 0) { startAtParent = false; }\n                if (startAtParent)\n                    return parent === null || parent === void 0 ? void 0 : parent.getVariantContext();\n                if (!isControllingVariants) {\n                    var context_1 = (parent === null || parent === void 0 ? void 0 : parent.getVariantContext()) || {};\n                    if (props.initial !== undefined) {\n                        context_1.initial = props.initial;\n                    }\n                    return context_1;\n                }\n                var context = {};\n                for (var i = 0; i < numVariantProps; i++) {\n                    var name_1 = variantProps[i];\n                    var prop = props[name_1];\n                    if (isVariantLabel(prop) || prop === false) {\n                        context[name_1] = prop;\n                    }\n                }\n                return context;\n            } });\n        return element;\n    };\n};\nvar variantProps = __spreadArray([\"initial\"], __read(variantPriorityOrder), false);\nvar numVariantProps = variantProps.length;\n\nexport { visualElement };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    for (var key in next) {\n        var nextValue = next[key];\n        var prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"6.3.16\", \"Attempting to mix Framer Motion versions \".concat(nextValue.version, \" with 6.3.16 may not work as expected.\"));\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping to a new motion value, create a new motion value\n             * from that\n             */\n            element.addValue(key, motionValue(nextValue));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                var existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (var key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { __rest, __assign, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    var match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    var _a = __read(match, 3), token = _a[1], fallback = _a[2];\n    return [token, fallback];\n}\nvar maxDepth = 4;\nfunction getVariableValue(current, element, depth) {\n    if (depth === void 0) { depth = 1; }\n    invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\".concat(current, \"\\\". This may indicate a circular fallback dependency.\"));\n    var _a = __read(parseCSSVariable(current), 2), token = _a[0], fallback = _a[1];\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, _a, transitionEnd) {\n    var _b;\n    var target = __rest(_a, []);\n    var element = visualElement.getInstance();\n    if (!(element instanceof Element))\n        return { target: target, transitionEnd: transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = __assign({}, transitionEnd);\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.forEachValue(function (value) {\n        var current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        var resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (var key in target) {\n        var current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        var resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd)\n            (_b = transitionEnd[key]) !== null && _b !== void 0 ? _b : (transitionEnd[key] = current);\n    }\n    return { target: target, transitionEnd: transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { __assign, __read } from 'tslib';\nimport { number, px } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformProps } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\n\nvar positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\nvar hasPositionalKey = function (target) {\n    return Object.keys(target).some(isPositionalKey);\n};\nvar setAndResetVelocity = function (value, to) {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nvar isNumOrPxType = function (v) {\n    return v === number || v === px;\n};\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nvar getPosFromMatrix = function (matrix, pos) {\n    return parseFloat(matrix.split(\", \")[pos]);\n};\nvar getTranslateFromMatrix = function (pos2, pos3) {\n    return function (_bbox, _a) {\n        var transform = _a.transform;\n        if (transform === \"none\" || !transform)\n            return 0;\n        var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n        if (matrix3d) {\n            return getPosFromMatrix(matrix3d[1], pos3);\n        }\n        else {\n            var matrix = transform.match(/^matrix\\((.+)\\)$/);\n            if (matrix) {\n                return getPosFromMatrix(matrix[1], pos2);\n            }\n            else {\n                return 0;\n            }\n        }\n    };\n};\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\nfunction removeNonTranslationalTransform(visualElement) {\n    var removedTransforms = [];\n    nonTranslationalTransformKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.syncRender();\n    return removedTransforms;\n}\nvar positionalValues = {\n    // Dimensions\n    width: function (_a, _b) {\n        var x = _a.x;\n        var _c = _b.paddingLeft, paddingLeft = _c === void 0 ? \"0\" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? \"0\" : _d;\n        return x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight);\n    },\n    height: function (_a, _b) {\n        var y = _a.y;\n        var _c = _b.paddingTop, paddingTop = _c === void 0 ? \"0\" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? \"0\" : _d;\n        return y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom);\n    },\n    top: function (_bbox, _a) {\n        var top = _a.top;\n        return parseFloat(top);\n    },\n    left: function (_bbox, _a) {\n        var left = _a.left;\n        return parseFloat(left);\n    },\n    bottom: function (_a, _b) {\n        var y = _a.y;\n        var top = _b.top;\n        return parseFloat(top) + (y.max - y.min);\n    },\n    right: function (_a, _b) {\n        var x = _a.x;\n        var left = _b.left;\n        return parseFloat(left) + (x.max - x.min);\n    },\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nvar convertChangedValueTypes = function (target, visualElement, changedKeys) {\n    var originBbox = visualElement.measureViewportBox();\n    var element = visualElement.getInstance();\n    var elementComputedStyle = getComputedStyle(element);\n    var display = elementComputedStyle.display;\n    var origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach(function (key) {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.syncRender();\n    var targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach(function (key) {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        var value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nvar checkAndConvertChangedValueTypes = function (visualElement, target, origin, transitionEnd) {\n    if (origin === void 0) { origin = {}; }\n    if (transitionEnd === void 0) { transitionEnd = {}; }\n    target = __assign({}, target);\n    transitionEnd = __assign({}, transitionEnd);\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    var removedTransformValues = [];\n    var hasAttemptedToRemoveTransformValues = false;\n    var changedValueTypeKeys = [];\n    targetPositionalKeys.forEach(function (key) {\n        var value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        var from = origin[key];\n        var fromType = findDimensionValueType(from);\n        var to = target[key];\n        var toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            var numKeyframes = to.length;\n            var fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (var i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                var current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        var scrollY_1 = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        var convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(function (_a) {\n                var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.syncRender();\n        // Restore scroll position\n        if (scrollY_1 !== null)\n            window.scrollTo({ top: scrollY_1 });\n        return { target: convertedTarget, transitionEnd: transitionEnd };\n    }\n    else {\n        return { target: target, transitionEnd: transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target: target, transitionEnd: transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nvar parseDomVariant = function (visualElement, target, origin, transitionEnd) {\n    var resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    var viewportBox = measureViewportBox(element, transformPagePoint);\n    var scroll = rootProjectionNode.scroll;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.x);\n        translateAxis(viewportBox.y, scroll.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox(_a) {\n    var top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox(_a) {\n    var x = _a.x, y = _a.y;\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    var topLeft = transformPoint({ x: point.left, y: point.top });\n    var bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { __rest, __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { parseDomVariant } from '../dom/utils/parse-dom-variant.mjs';\nimport { isTransformProp } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nvar htmlConfig = {\n    treeType: \"dom\",\n    readValueFromInstance: function (domElement, key) {\n        if (isTransformProp(key)) {\n            var defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            var computedStyle = getComputedStyle(domElement);\n            return ((isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0);\n        }\n    },\n    sortNodePosition: function (a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    },\n    getBaseTarget: function (props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    },\n    measureViewportBox: function (element, _a) {\n        var transformPagePoint = _a.transformPagePoint;\n        return measureViewportBox(element, transformPagePoint);\n    },\n    /**\n     * Reset the transform on the current Element. This is called as part\n     * of a batched process across the entire layout tree. To remove this write\n     * cycle it'd be interesting to see if it's possible to \"undo\" all the current\n     * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms\n     * works\n     */\n    resetTransform: function (element, domElement, props) {\n        var transformTemplate = props.transformTemplate;\n        domElement.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        // Ensure that whatever happens next, we restore our transform on the next frame\n        element.scheduleRender();\n    },\n    restoreTransform: function (instance, mutableState) {\n        instance.style.transform = mutableState.style.transform;\n    },\n    removeValueFromRenderState: function (key, _a) {\n        var vars = _a.vars, style = _a.style;\n        delete vars[key];\n        delete style[key];\n    },\n    /**\n     * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`\n     * can be animated by Motion.\n     */\n    makeTargetAnimatable: function (element, _a, _b, isMounted) {\n        var transformValues = _b.transformValues;\n        if (isMounted === void 0) { isMounted = true; }\n        var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n        var origin = getOrigin(target, transition || {}, element);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(element, target, origin);\n            var parsed = parseDomVariant(element, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return __assign({ transition: transition, transitionEnd: transitionEnd }, target);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (element, renderState, latestValues, options, props) {\n        if (element.isVisible !== undefined) {\n            renderState.style.visibility = element.isVisible\n                ? \"visible\"\n                : \"hidden\";\n        }\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    },\n    render: renderHTML,\n};\nvar htmlVisualElement = visualElement(htmlConfig);\n\nexport { getComputedStyle, htmlConfig, htmlVisualElement };\n","import { __assign } from 'tslib';\nimport { visualElement } from '../index.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { htmlConfig } from '../html/visual-element.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isTransformProp } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    }, readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    }, scrapeMotionValuesFromProps: scrapeMotionValuesFromProps, build: function (_element, renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nexport { svgVisualElement };\n","import { __assign } from 'tslib';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nvar domAnimation = __assign(__assign({ renderer: createDomVisualElement }, animations), gestureAnimations);\n\nexport { domAnimation };\n","import { htmlVisualElement } from '../html/visual-element.mjs';\nimport { svgVisualElement } from '../svg/visual-element.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nvar createDomVisualElement = function (Component, options) {\n    return isSVGComponent(Component)\n        ? svgVisualElement(options, { enableHardwareAcceleration: false })\n        : htmlVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n"],"names":["shallowCompare","next","prev","Array","isArray","prevLength","length","i","AnimationType","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Drag","Exit","reversePriorityOrder","__spreadArray","__read","reverse","numAnimationTypes","createAnimationState","visualElement","animate","animations","Promise","all","map","_a","animation","options","animateVisualElement","animateList","state","createTypeState","createState","allAnimatedKeys","isInitialRender","buildResolvedTypeValues","acc","definition","resolved","resolveVariant","transition","transitionEnd","target","__rest","__assign","animateChanges","changedActiveType","props","getProps","context","getVariantContext","removedKeys","Set","encounteredKeys","removedVariantIndex","Infinity","_loop_1","type","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","isAnimationControls","variantDidChange","isVariantLabels","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","_b","prevResolvedValues","allKeys","markToAnimate","key","delete","needsAnimating","hasOwnProperty","isKeyframesTarget","undefined","add","has","blockInitialAnimation","push","apply","size","fallbackAnimation_1","forEach","fallbackTarget","getBaseTarget","shouldAnimate","Boolean","initial","resolve","isAnimated","setActive","variantChildren","child","animationState","setAnimateFunction","makeAnimator","getState","makeRenderlessComponent","hook","useEffect","subscribe","exit","custom","useContext","PresenceContext","isPresent","onExitComplete","register","id","useId","usePresence","safeToRemove","presenceContext","then","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","ref","element","current","isTouchEvent","event","touches","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","point","changedTouches","x","y","pointFromMouse","wrapHandler","shouldFilterPrimaryPointer","eventHandler","listener","extractEventInfo","isMouseEvent","MouseEvent","button","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","isBrowser","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","isDragActive","openGestureLock","drag","openHorizontal_1","openVertical_1","getGlobalLock","createHoverEvent","callback","info","PointerEvent","pointerType","isNodeOrChild","parent","parentElement","warned","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","get","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","set","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","some","useIntersectionObserver","shouldObserve","rootMargin","margin","amount","once","threshold","getInstance","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","message","env","console","warn","requestAnimationFrame","gestureAnimations","inView","whileInView","viewport","useRef","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","call","checkPointerEnd","onPointerUp","onPointerCancel","pipe","useUnmountEffect","focus","whileFocus","hover","onHoverStart","onHoverEnd","whileHover","names","treeType","build","makeTargetAnimatable","measureViewportBox","renderInstance","render","readValueFromInstance","removeValueFromRenderState","sortNodePosition","scrapeMotionValuesFromProps","presenceId","visualState","shouldReduceMotion","instance","removeFromVariantTree","isMounted","latestValues","renderState","lifecycles","managers","SubscriptionManager","propSubscriptions","clearAllListeners","manager","clear","updatePropListeners","on","propListener","args","_i","arguments","notify","createLifecycles","values","Map","valueSubscriptions","prevMotionValues","baseTarget","triggerBuild","style","projection","update","notifyUpdate","bindToMotionValue","value","removeOnChange","onChange","latestValue","onUpdate","sync","removeOnRenderRequest","onRenderRequest","scheduleRender","initialMotionValues","isMotionValue","isControllingVariants","checkIfControllingVariants","isVariantNode","checkIfVariantNode","depth","children","isVisible","mount","newInstance","addVariantChild","setProps","unmount","cancelSync","remove","closestVariantNode","getClosestVariantNode","other","getLayoutId","layoutId","getStaticValue","setStaticValue","getLatestValues","setVisibility","visibility","canMutate","addValue","hasValue","removeValue","getValue","defaultValue","motionValue","forEachValue","readValue","setBaseTarget","syncRender","newProps","transformTemplate","nextValue","prevValue","existingValue","hasAnimated","updateMotionValuesFromProps","getVariant","variants","getDefaultTransition","getTransformPagePoint","transformPagePoint","startAtParent","context_1","numVariantProps","name_1","variantProps","isCSSVariable","startsWith","cssVariableRegex","getVariableValue","invariant","concat","match","exec","parseCSSVariable","token","getComputedStyle","getPropertyValue","trim","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","to","isNumOrPxType","v","number","px","getPosFromMatrix","matrix","pos","parseFloat","split","getTranslateFromMatrix","pos2","pos3","_bbox","transform","matrix3d","transformKeys","nonTranslationalTransformKeys","transformProps","positionalValues","width","_c","paddingLeft","_d","paddingRight","max","min","height","paddingTop","paddingBottom","top","left","bottom","right","checkAndConvertChangedValueTypes","origin","targetPositionalKeys","Object","keys","filter","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","from","fromType","findDimensionValueType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY_1","indexOf","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","Element","resolveCSSVariables","transformPoint","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","htmlConfig","domElement","isTransformProp","defaultType","getDefaultValueType","default","computedStyle","a","b","compareDocumentPosition","resetTransform","restoreTransform","mutableState","vars","transformValues","getOrigin","checkTargetForNewValues","parsed","buildHTMLStyles","renderHTML","htmlVisualElement","svgVisualElement","camelCaseAttributes","camelToDash","getAttribute","_element","buildSVGAttrs","renderSVG","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration"],"sourceRoot":""}